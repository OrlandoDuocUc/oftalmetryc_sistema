#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
DIAGN√ìSTICO AVANZADO DE POSTGRESQL
=================================
"""

import os
import sys
from dotenv import load_dotenv

load_dotenv()

def test_postgresql_config():
    """Probar diferentes configuraciones de PostgreSQL"""
    print("üîç DIAGN√ìSTICO POSTGRESQL AVANZADO")
    print("=" * 50)
    
    configurations = [
        {
            'name': 'Configuraci√≥n 1: URL Simple',
            'params': {
                'dsn': 'postgresql://postgres:12345@localhost:5432/optica_bd'
            }
        },
        {
            'name': 'Configuraci√≥n 2: URL con encoding',
            'params': {
                'dsn': 'postgresql://postgres:12345@localhost:5432/optica_bd?client_encoding=utf8'
            }
        },
        {
            'name': 'Configuraci√≥n 3: Par√°metros individuales',
            'params': {
                'host': 'localhost',
                'database': 'optica_bd', 
                'user': 'postgres',
                'password': '12345',
                'port': 5432
            }
        },
        {
            'name': 'Configuraci√≥n 4: Con encoding expl√≠cito',
            'params': {
                'host': 'localhost',
                'database': 'optica_bd',
                'user': 'postgres', 
                'password': '12345',
                'port': 5432,
                'options': '-c client_encoding=utf8'
            }
        }
    ]
    
    for i, config in enumerate(configurations, 1):
        print(f"\nüß™ PROBANDO {config['name']}:")
        print("-" * 40)
        
        try:
            import psycopg2
            
            if 'dsn' in config['params']:
                conn = psycopg2.connect(config['params']['dsn'])
            else:
                conn = psycopg2.connect(**config['params'])
            
            cursor = conn.cursor()
            cursor.execute("SELECT version();")
            version = cursor.fetchone()[0]
            print(f"‚úÖ PostgreSQL version: {version[:50]}...")
            
            cursor.execute("SELECT current_database();")
            db = cursor.fetchone()[0]
            print(f"‚úÖ Database: {db}")
            
            conn.close()
            print(f"‚úÖ CONFIGURACI√ìN {i} FUNCION√ì!")
            return config
            
        except Exception as e:
            print(f"‚ùå CONFIGURACI√ìN {i} FALL√ì: {str(e)[:100]}")
            continue
    
    print("\n‚ùå NINGUNA CONFIGURACI√ìN FUNCION√ì")
    return None

if __name__ == "__main__":
    working_config = test_postgresql_config()
    
    if working_config:
        print(f"\nüéâ CONFIGURACI√ìN EXITOSA: {working_config['name']}")
        print("üìã Usar esta configuraci√≥n en la aplicaci√≥n")
    else:
        print("\nüö® PROBLEMA GRAVE CON POSTGRESQL")
        print("üí° POSIBLES SOLUCIONES:")
        print("1. Verificar que PostgreSQL est√© corriendo")
        print("2. Verificar credenciales (usuario: postgres, password: 12345)")
        print("3. Verificar que la base de datos 'optica_bd' exista")
        print("4. Verificar configuraci√≥n de encoding en postgresql.conf")