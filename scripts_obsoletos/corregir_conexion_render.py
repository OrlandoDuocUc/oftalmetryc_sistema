#!/usr/bin/env python3
"""
CORREGIR CONEXI√ìN A RENDER - Ficha Cl√≠nica
Script para corregir la configuraci√≥n y que GitHub se conecte correctamente a Render
"""
import os
import shutil

def corregir_conexion_render():
    """Corrige la configuraci√≥n para conectar correctamente a Render"""
    print("üîß CORRIGIENDO CONEXI√ìN A RENDER PARA GITHUB...")
    
    # 1. Restaurar controlador original
    print("\n1Ô∏è‚É£ Restaurando controlador original...")
    try:
        if os.path.exists("adapters/input/flask_app/controllers/consulta_medica_controller_backup.py"):
            shutil.copy2(
                "adapters/input/flask_app/controllers/consulta_medica_controller_backup.py",
                "adapters/input/flask_app/controllers/consulta_medica_controller.py"
            )
            print("‚úÖ Controlador restaurado")
        else:
            print("‚ö†Ô∏è Backup no encontrado, continuando...")
    except Exception as e:
        print(f"‚ùå Error restaurando controlador: {e}")
    
    # 2. Crear archivo .env para desarrollo local (conecta a Render)
    print("\n2Ô∏è‚É£ Configurando .env para desarrollo...")
    env_content = """# Configuraci√≥n para desarrollo local conectando a Render
DATABASE_URL=postgresql://oftalmetryc_user:0WdPbRIzVrbH6xYFCye20Q7ST4e3v7Kn@dpg-d3efatffte5s73chd9r0-a.oregon-postgres.render.com/oftalmetryc_db
DB_USER=oftalmetryc_user
DB_PASSWORD=0WdPbRIzVrbH6xYFCye20Q7ST4e3v7Kn
DB_HOST=dpg-d3efatffte5s73chd9r0-a.oregon-postgres.render.com
DB_PORT=5432
DB_NAME=oftalmetryc_db

# Configuraci√≥n de Encoding UTF-8
PGCLIENTENCODING=UTF8
PYTHONIOENCODING=utf-8

# Configuraci√≥n de Flask
FLASK_ENV=development
FLASK_DEBUG=True
SECRET_KEY=optica-almonacid-secret-key-2024

# Configuraci√≥n de zona horaria
TIMEZONE=America/Santiago
"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("‚úÖ Archivo .env configurado para Render")
    except Exception as e:
        print(f"‚ùå Error configurando .env: {e}")
    
    # 3. Verificar que settings.py est√© correcto
    print("\n3Ô∏è‚É£ Verificando settings.py...")
    try:
        with open('config/settings.py', 'r', encoding='utf-8') as f:
            content = f.read()
            if 'oftalmetryc_db' in content:
                print("‚úÖ settings.py configurado correctamente")
            else:
                print("‚ö†Ô∏è Revisar settings.py manualmente")
    except Exception as e:
        print(f"‚ùå Error verificando settings.py: {e}")
    
    # 4. Crear script de verificaci√≥n
    print("\n4Ô∏è‚É£ Creando script de verificaci√≥n...")
    verificacion_content = '''#!/usr/bin/env python3
"""
Script para verificar que la conexi√≥n a Render funciona
"""
import os
from app.infraestructure.utils.db import get_connection

def verificar_conexion():
    """Verifica la conexi√≥n a la base de datos de Render"""
    try:
        print("üîÑ Verificando conexi√≥n a Render...")
        conn = get_connection()
        if conn:
            cur = conn.cursor()
            cur.execute("SELECT COUNT(*) FROM paciente;")
            pacientes = cur.fetchone()[0]
            cur.execute("SELECT COUNT(*) FROM consulta_medica;")
            consultas = cur.fetchone()[0]
            
            print(f"‚úÖ Conexi√≥n exitosa a Render:")
            print(f"   üìã Pacientes: {pacientes}")
            print(f"   üëÅÔ∏è Consultas m√©dicas: {consultas}")
            
            cur.close()
            conn.close()
            return True
        else:
            print("‚ùå No se pudo conectar a la base de datos")
            return False
    except Exception as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        return False

if __name__ == "__main__":
    verificar_conexion()
'''
    
    try:
        with open('verificar_conexion_render.py', 'w', encoding='utf-8') as f:
            f.write(verificacion_content)
        print("‚úÖ Script de verificaci√≥n creado")
    except Exception as e:
        print(f"‚ùå Error creando script de verificaci√≥n: {e}")
    
    print("\nüéâ ¬°CORRECCI√ìN COMPLETADA!")
    print("\nüìã PR√ìXIMOS PASOS:")
    print("1. üß™ Ejecutar: python verificar_conexion_render.py")
    print("2. üöÄ Ejecutar: python boot.py")
    print("3. üåê Subir cambios a GitHub")
    print("4. ‚úÖ Deploy autom√°tico en Render")
    print("\nüîó URL Render: https://oftalmetryc-sistema.onrender.com")

if __name__ == "__main__":
    corregir_conexion_render()